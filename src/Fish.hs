-- Henderson's Fish: https://eprints.soton.ac.uk/257577/1/funcgeo2.pdf

module Fish
  ( squarelimit
  , fish
  ) where

import Prelude hiding (cycle, flip)
import Geometry
import Image

fish2, fish3, t, u :: Image
fish2 = flip (rot45 fish)
fish3 = rot (rot (rot fish2))
t     = over fish (over fish2 fish3)
u     = over (over fish2 (rot fish2)) 
             (over (rot (rot fish2)) (rot (rot (rot fish2))))

quartet :: Image -> Image -> Image -> Image -> Image
quartet p q r s = above (beside p q) (beside r s)

cycle :: Image -> Image
cycle p = quartet p (rot p) (rot (rot p)) (rot (rot (rot p)))

side :: Int -> Image
side = natrec blank f
 where
  f n img = quartet img img (rot t) t

corner :: Int -> Image
corner = natrec blank f 
 where 
  f n img = quartet img (side (n-1)) (rot (side (n-1))) u

nonet :: Image -> Image -> Image -> Image -> Image 
      -> Image -> Image -> Image -> Image -> Image
nonet p q r s t u v w x = 
  aboveS 1 2 (besideS 1 2 p (beside q r)) 
  (above     (besideS 1 2 s (beside t u)) 
             (besideS 1 2 v (beside w x)))

squarelimit :: Int -> Image
squarelimit n = scale 1000 $
  nonet (corner n) (side n) (rot $ rot $ rot $ corner n) 
        (rot $ side n) u (rot $ rot $ rot $ side n) 
        (rot $ corner n) (rot $ rot $ side n) (rot $ rot $ corner n)

fish :: Image
fish = foldr (\(a, b, c, d) -> addCubicBezier a b c d) blank
  [ (( 0.00, 0.00),  (0.08, 0.02),  (0.22, 0.18),  (0.29, 0.28))
  , (( 0.29, 0.28),  (0.30, 0.36),  (0.29, 0.43),  (0.30, 0.50))
  , (( 0.30, 0.50),  (0.34, 0.60),  (0.43, 0.68),  (0.50, 0.74))
  , (( 0.50, 0.74),  (0.58, 0.79),  (0.66, 0.78),  (0.76, 0.80))
  , (( 0.76, 0.80),  (0.82, 0.88),  (0.94, 0.95),  (1.00, 1.00))
  , (( 1.00, 1.00),  (0.90, 0.97),  (0.81, 0.96),  (0.76, 0.95))
  , (( 0.76, 0.95),  (0.69, 0.96),  (0.62, 0.96),  (0.55, 0.96))
  , (( 0.55, 0.96),  (0.49, 0.90),  (0.40, 0.83),  (0.35, 0.80))
  , (( 0.35, 0.80),  (0.29, 0.76),  (0.19, 0.72),  (0.14, 0.69))
  , (( 0.14, 0.69),  (0.09, 0.65), (-0.03, 0.57), (-0.05, 0.28))
  , ((-0.05, 0.28), (-0.04, 0.18), (-0.02, 0.05),  (0.00, 0.00))

  , ((0.10, 0.15), (0.14, 0.18), (0.18, 0.22), (0.18, 0.25))
  , ((0.18, 0.25), (0.16, 0.26), (0.14, 0.27), (0.12, 0.27))
  , ((0.12, 0.27), (0.11, 0.23), (0.11, 0.19), (0.10, 0.15))

  , ((0.05, 0.18), (0.10, 0.20), (0.08, 0.26), (0.09, 0.30))
  , ((0.09, 0.30), (0.07, 0.32), (0.06, 0.34), (0.04, 0.33))
  , ((0.04, 0.33), (0.04, 0.27), (0.04, 0.19), (0.05, 0.18))

  , ((0.11, 0.30), (0.16, 0.44), (0.24, 0.61), (0.30, 0.66))
  , ((0.30, 0.66), (0.41, 0.78), (0.62, 0.84), (0.80, 0.92))

  , ((0.23, 0.20), (0.35, 0.20), (0.44, 0.22), (0.50, 0.25))
  , ((0.50, 0.25), (0.50, 0.33), (0.50, 0.41), (0.50, 0.49))
  , ((0.50, 0.49), (0.46, 0.53), (0.42, 0.57), (0.38, 0.61))

  , ((0.29, 0.29), (0.36, 0.26), (0.43, 0.27), (0.48, 0.31))

  , ((0.34, 0.39), (0.38, 0.34), (0.44, 0.36), (0.48, 0.37))

  , ((0.34, 0.49), (0.38, 0.44), (0.41, 0.42), (0.48, 0.43))

  , ((0.45, 0.58), (0.46, 0.60), (0.47, 0.61), (0.48, 0.61))

  , ((0.42, 0.61), (0.43, 0.64), (0.46, 0.68), (0.48, 0.67))

  , ( (0.25, 0.74),  (0.17, 0.83),  (0.08, 0.91),  (0.00, 0.99))
  , ( (0.00, 0.99), (-0.08, 0.91), (-0.17, 0.82), (-0.25, 0.74))
  , ((-0.25, 0.74), (-0.20, 0.63), (-0.11, 0.53), (-0.03, 0.43))

  , ((-0.17, 0.74), (-0.13, 0.66), (-0.08, 0.60), (-0.01, 0.56))

  , ((-0.12, 0.79), (-0.07, 0.71), (-0.02, 0.66), (0.05, 0.60))

  , ((-0.06, 0.86), (-0.03, 0.77), (0.03, 0.72), (0.10, 0.66))

  , ((-0.02, 0.92), (0.02, 0.84), (0.09, 0.77), (0.16, 0.70))
  ]
